<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LocalHook.CreateUnmanaged Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="CreateUnmanaged method" /><meta name="System.Keywords" content="LocalHook.CreateUnmanaged method" /><meta name="Microsoft.Help.F1" content="EasyHook.LocalHook.CreateUnmanaged" /><meta name="Microsoft.Help.Id" content="M:EasyHook.LocalHook.CreateUnmanaged(System.IntPtr,System.IntPtr,System.IntPtr)" /><meta name="Description" content="Installs an unmanaged hook. After this you'll have to activate it by setting a proper . WON'T be supported! Refer to the native &quot;LhBarrierXxx&quot; APIs to access unmanaged hook runtime information." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="EasyHook" /><meta name="file" content="M_EasyHook_LocalHook_CreateUnmanaged" /><meta name="guid" content="M_EasyHook_LocalHook_CreateUnmanaged" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">EasyHook 2.7 Beta<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook 2.7 Beta" tocid="roottoc">EasyHook 2.7 Beta</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook" tocid="N_EasyHook">EasyHook</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_LocalHook.htm" title="LocalHook Class" tocid="T_EasyHook_LocalHook">LocalHook Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_EasyHook_LocalHook.htm" title="LocalHook Methods" tocid="Methods_T_EasyHook_LocalHook">LocalHook Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_Create.htm" title="Create Method " tocid="M_EasyHook_LocalHook_Create">Create Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_CreateUnmanaged.htm" title="CreateUnmanaged Method " tocid="M_EasyHook_LocalHook_CreateUnmanaged">CreateUnmanaged Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_Dispose.htm" title="Dispose Method " tocid="M_EasyHook_LocalHook_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_EnableRIPRelocation.htm" title="EnableRIPRelocation Method " tocid="M_EasyHook_LocalHook_EnableRIPRelocation">EnableRIPRelocation Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_Finalize.htm" title="Finalize Method " tocid="M_EasyHook_LocalHook_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_GetNameByHandle.htm" title="GetNameByHandle Method " tocid="M_EasyHook_LocalHook_GetNameByHandle">GetNameByHandle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_GetProcAddress.htm" title="GetProcAddress Method " tocid="M_EasyHook_LocalHook_GetProcAddress">GetProcAddress Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_GetProcDelegate__1.htm" title="GetProcDelegate(TDelegate) Method " tocid="M_EasyHook_LocalHook_GetProcDelegate__1">GetProcDelegate(TDelegate) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_GetProcessIdByHandle.htm" title="GetProcessIdByHandle Method " tocid="M_EasyHook_LocalHook_GetProcessIdByHandle">GetProcessIdByHandle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_GetThreadIdByHandle.htm" title="GetThreadIdByHandle Method " tocid="M_EasyHook_LocalHook_GetThreadIdByHandle">GetThreadIdByHandle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_IsThreadIntercepted.htm" title="IsThreadIntercepted Method " tocid="M_EasyHook_LocalHook_IsThreadIntercepted">IsThreadIntercepted Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_LocalHook_Release.htm" title="Release Method " tocid="M_EasyHook_LocalHook_Release">Release Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">LocalHook<span id="LST57257179_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST57257179_0?cpp=::|nu=.");</script>CreateUnmanaged Method </td></tr></table><span class="introStyle"></span><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- EasyHookLeaderBoard728x90 --><ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-7073730100723702" data-ad-slot="9421789924"></ins><script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><div class="summary">
            Installs an unmanaged hook. After this you'll have to activate it by setting a proper <a href="P_EasyHook_LocalHook_ThreadACL.htm">ThreadACL</a>.
            <a href="T_EasyHook_HookRuntimeInfo.htm">HookRuntimeInfo</a> WON'T be supported! Refer to the native "LhBarrierXxx" APIs to
            access unmanaged hook runtime information.
            </div><p> </p><strong>Namespace:</strong> <a href="N_EasyHook.htm">EasyHook</a><br /><strong>Assembly:</strong> EasyHook (in EasyHook.dll) Version: 2.7.5719.0 (2.7.5719.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">LocalHook</span> <span class="identifier">CreateUnmanaged</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">InTargetProc</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">InNewProc</span>,
	<span class="identifier">IntPtr</span> <span class="parameter">InCallback</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CreateUnmanaged</span> ( 
	<span class="parameter">InTargetProc</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">InNewProc</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>,
	<span class="parameter">InCallback</span> <span class="keyword">As</span> <span class="identifier">IntPtr</span>
) <span class="keyword">As</span> <span class="identifier">LocalHook</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">LocalHook</span>^ <span class="identifier">CreateUnmanaged</span>(
	<span class="identifier">IntPtr</span> <span class="parameter">InTargetProc</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">InNewProc</span>, 
	<span class="identifier">IntPtr</span> <span class="parameter">InCallback</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CreateUnmanaged</span> : 
        <span class="parameter">InTargetProc</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">InNewProc</span> : <span class="identifier">IntPtr</span> * 
        <span class="parameter">InCallback</span> : <span class="identifier">IntPtr</span> <span class="keyword">-&gt;</span> <span class="identifier">LocalHook</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">InTargetProc</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="LST57257179_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST57257179_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</a><br />A target entry point that should be hooked.</dd><dt><span class="parameter">InNewProc</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="LST57257179_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST57257179_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</a><br />A handler with the same signature as the original entry point
            that will be invoked for every call that has passed the Thread Deadlock Barrier and various integrity checks.</dd><dt><span class="parameter">InCallback</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/5he14kz8" target="_blank">System<span id="LST57257179_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST57257179_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IntPtr</a><br />An uninterpreted callback that will later be available through <span class="code">LhBarrierGetCallback()</span>.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_EasyHook_LocalHook.htm">LocalHook</a><br />
            A handle to the newly created hook.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/5afc3sdf" target="_blank">OutOfMemoryException</a></td><td>
            Not enough memory available to complete the operation. On 64-Bit this may also indicate
            that no memory can be allocated within a 31-Bit boundary around the given entry point.
            </td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/3w1b3114" target="_blank">ArgumentException</a></td><td>
            The given function pointer does not map to executable memory (valid machine code) or 
            you passed <span class="code">null</span> as delegate.
            </td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/8a7a4e64" target="_blank">NotSupportedException</a></td><td>
            The given entry point contains machine code that can not be hooked.
            </td></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/ms131199" target="_blank">InsufficientMemoryException</a></td><td>
            The maximum amount of hooks has been installed. This is currently set to MAX_HOOK_COUNT (1024).
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
            Note that not all entry points are hookable! In general methods like <span class="code">CreateFileW</span>
            won't cause any trouble. But there may be methods that are not hookable because their
            entry point machine code is not eligable to be hooked. You should test all hooks on
            common environments like "Windows XP x86/x64 SP1/SP2/SP3" and "Windows Vista x86/x64 (SP1)".
            This is the only way to ensure that your application will work well on most machines.
            </p><p>
            Unmanaged hooks will require a native DLL which handles the requests. This way
            you will get a high-performance interface, because
            a switch from unmanaged to managed code seems to be rather time consuming without doing anything
            useful (at least nothing visible); so a hook omitting this switch will be handled one or two
            orders of magnitudes faster until finally your handler gains execution. But as a managed hook is still executed
            within at last 1000 nano-seconds, even the "slow" managed implementation will be fast enough in most
            cases. With C++.NET you would be able to provide such native high-speed hooks for frequently
            called API methods, while still using managed ones for usual API methods, within a single assembly!
            A pure unmanaged, empty hook executes in approx. 70 nano-seconds, which is incredible fast
            considering the thread deadlock barrier and thread ACL negotiation that are already included in this benchmark!
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_EasyHook_LocalHook.htm">LocalHook Class</a></div><div class="seeAlsoStyle"><a href="N_EasyHook.htm">EasyHook Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="https://easyhook.github.io/" target="_blank">Copyright (C) 2009 Christoph Husse &amp; (C) 2012 Justin Stenning</a></p><script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
  var pageTracker = _gat._getTracker("UA-66127710-1");
  pageTracker._trackPageview();
} catch(err) {}
</script> </div></body></html>