<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RemoteHooking.CreateAndInject Method (String, String, Int32, InjectionOptions, String, String, Int32, Object[])</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:EasyHook.RemoteHooking.CreateAndInject(System.String,System.String,System.Int32,EasyHook.InjectionOptions,System.String,System.String,System.Int32@,System.Object[])" /><meta name="Description" content="Creates a new process which is started suspended until you call from within your injected library Run() method. This allows you to hook the target BEFORE any of its usual code is executed." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="EasyHook" /><meta name="file" content="M_EasyHook_RemoteHooking_CreateAndInject" /><meta name="guid" content="M_EasyHook_RemoteHooking_CreateAndInject" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">EasyHook 2.7<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook 2.7" tocid="roottoc">EasyHook 2.7</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook" tocid="N_EasyHook">EasyHook</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_RemoteHooking.htm" title="RemoteHooking Class" tocid="T_EasyHook_RemoteHooking">RemoteHooking Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_EasyHook_RemoteHooking.htm" title="RemoteHooking Methods" tocid="Methods_T_EasyHook_RemoteHooking">RemoteHooking Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_EasyHook_RemoteHooking_CreateAndInject.htm" title="CreateAndInject Method " tocid="Overload_EasyHook_RemoteHooking_CreateAndInject">CreateAndInject Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_RemoteHooking_CreateAndInject_1.htm" title="CreateAndInject Method (String, String, Int32, String, String, Int32, Object[])" tocid="M_EasyHook_RemoteHooking_CreateAndInject_1">CreateAndInject Method (String, String, Int32, String, String, Int32, Object[])</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_EasyHook_RemoteHooking_CreateAndInject.htm" title="CreateAndInject Method (String, String, Int32, InjectionOptions, String, String, Int32, Object[])" tocid="M_EasyHook_RemoteHooking_CreateAndInject">CreateAndInject Method (String, String, Int32, InjectionOptions, String, String, Int32, Object[])</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>RemoteHooking<span id="LST65D36A2C_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_0?cpp=::|nu=.");</script>CreateAndInject Method (String, String, Int32, InjectionOptions, String, String, Int32<span id="LST65D36A2C_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_1?cpp=%");</script>, <span id="LST65D36A2C_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_2?cpp=array&lt;");</script>Object<span id="LST65D36A2C_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_3?cpp=&gt;|vb=()|nu=[]");</script>)</h1></td></tr></table><span class="introStyle"></span>
<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- EasyHookLeaderBoard728x90 -->
<ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-7073730100723702" data-ad-slot="9421789924"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
 <div class="summary">
            Creates a new process which is started suspended until you call <a href="M_EasyHook_RemoteHooking_WakeUpProcess.htm">WakeUpProcess<span id="LST65D36A2C_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>
            from within your injected library <span class="code">Run()</span> method. This allows you to hook the target
            BEFORE any of its usual code is executed. In situations where a target has debugging and
            hook preventions, you will get a chance to block those mechanisms for example...
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_EasyHook.htm">EasyHook</a><br />
    <strong>Assembly:</strong>
   EasyHook (in EasyHook.dll) Version: 2.7.6270.0 (2.7.6270.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">CreateAndInject</span>(
	<span class="identifier">string</span> <span class="parameter">InEXEPath</span>,
	<span class="identifier">string</span> <span class="parameter">InCommandLine</span>,
	<span class="identifier">int</span> <span class="parameter">InProcessCreationFlags</span>,
	<span class="identifier">InjectionOptions</span> <span class="parameter">InOptions</span>,
	<span class="identifier">string</span> <span class="parameter">InLibraryPath_x86</span>,
	<span class="identifier">string</span> <span class="parameter">InLibraryPath_x64</span>,
	<span class="keyword">out</span> <span class="identifier">int</span> <span class="parameter">OutProcessId</span>,
	<span class="keyword">params</span> <span class="identifier">Object</span>[] <span class="parameter">InPassThruArgs</span>
)</pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">CreateAndInject</span> ( 
	<span class="parameter">InEXEPath</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">InCommandLine</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">InProcessCreationFlags</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">InOptions</span> <span class="keyword">As</span> <span class="identifier">InjectionOptions</span>,
	<span class="parameter">InLibraryPath_x86</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">InLibraryPath_x64</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">OutProcessId</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="keyword">ParamArray</span> <span class="parameter">InPassThruArgs</span> <span class="keyword">As</span> <span class="identifier">Object</span>()
)</pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">CreateAndInject</span>(
	<span class="identifier">String</span>^ <span class="parameter">InEXEPath</span>, 
	<span class="identifier">String</span>^ <span class="parameter">InCommandLine</span>, 
	<span class="identifier">int</span> <span class="parameter">InProcessCreationFlags</span>, 
	<span class="identifier">InjectionOptions</span> <span class="parameter">InOptions</span>, 
	<span class="identifier">String</span>^ <span class="parameter">InLibraryPath_x86</span>, 
	<span class="identifier">String</span>^ <span class="parameter">InLibraryPath_x64</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">int</span>% <span class="parameter">OutProcessId</span>, 
	... <span class="keyword">array</span>&lt;<span class="identifier">Object</span>^&gt;^ <span class="parameter">InPassThruArgs</span>
)</pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">CreateAndInject</span> : 
        <span class="parameter">InEXEPath</span> : <span class="identifier">string</span> * 
        <span class="parameter">InCommandLine</span> : <span class="identifier">string</span> * 
        <span class="parameter">InProcessCreationFlags</span> : <span class="identifier">int</span> * 
        <span class="parameter">InOptions</span> : <span class="identifier">InjectionOptions</span> * 
        <span class="parameter">InLibraryPath_x86</span> : <span class="identifier">string</span> * 
        <span class="parameter">InLibraryPath_x64</span> : <span class="identifier">string</span> * 
        <span class="parameter">OutProcessId</span> : <span class="identifier">int</span> <span class="keyword">byref</span> * 
        <span class="parameter">InPassThruArgs</span> : <span class="identifier">Object</span>[] <span class="keyword">-&gt;</span> <span class="keyword">unit</span> 
</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">InEXEPath</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LST65D36A2C_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            A relative or absolute path to the desired executable.
            </dd><dt><span class="parameter">InCommandLine</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LST65D36A2C_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            Optional command line parameters for process creation.
            </dd><dt><span class="parameter">InProcessCreationFlags</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST65D36A2C_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />
            Internally CREATE_SUSPENDED is already passed to CreateProcess(). With this
            parameter you can add more flags like DETACHED_PROCESS, CREATE_NEW_CONSOLE or
            whatever!
            </dd><dt><span class="parameter">InOptions</span></dt><dd>Type: <a href="T_EasyHook_InjectionOptions.htm">EasyHook<span id="LST65D36A2C_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>InjectionOptions</a><br />
            A valid combination of options.
            </dd><dt><span class="parameter">InLibraryPath_x86</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LST65D36A2C_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            A partially qualified assembly name or a relative/absolute file path of the 32-bit version of your library. 
            For example "MyAssembly, PublicKeyToken=248973975895496" or ".\Assemblies\\MyAssembly.dll". 
            </dd><dt><span class="parameter">InLibraryPath_x64</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/s1wwdcbf" target="_blank">System<span id="LST65D36A2C_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />
            A partially qualified assembly name or a relative/absolute file path of the 64-bit version of your library. 
            For example "MyAssembly, PublicKeyToken=248973975895496" or ".\Assemblies\\MyAssembly.dll". 
            </dd><dt><span class="parameter">OutProcessId</span></dt><dd>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">System<span id="LST65D36A2C_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><span id="LST65D36A2C_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_12?cpp=%");</script><br />
            The process ID of the newly created process.
            </dd><dt><span class="parameter">InPassThruArgs</span></dt><dd>Type: <span id="LST65D36A2C_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_13?cpp=array&lt;");</script><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST65D36A2C_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><span id="LST65D36A2C_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_15?cpp=&gt;|vb=()|nu=[]");</script><br />
            A serializable list of parameters being passed to your library entry points <span class="code">Run()</span> and
            constructor (see <a href="T_EasyHook_IEntryPoint.htm">IEntryPoint</a>).
            </dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Exceptions</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="tableSection"><table><tr><th>Exception</th><th>Condition</th></tr><tr><td><a href="http://msdn2.microsoft.com/en-us/library/3w1b3114" target="_blank">ArgumentException</a></td><td>
            The given EXE path could not be found.
            </td></tr></table></div></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
            Please note that this method might fail when injecting into managed processes, especially
            when the target is using the CLR hosting API and takes advantage of AppDomains. For example,
            the Internet Explorer won't be hookable with this method. In such a case your only options
            are either to hook the target with the unmanaged API or to hook it after (non-supended) creation 
            with the usual <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST65D36A2C_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_16?cpp=array&lt;");</script>Object<span id="LST65D36A2C_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_17?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> method.
            </p><p>
            See <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST65D36A2C_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_18?cpp=array&lt;");</script>Object<span id="LST65D36A2C_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> for more information. The exceptions listed here are additional
            to the ones listed for <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST65D36A2C_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_20?cpp=array&lt;");</script>Object<span id="LST65D36A2C_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST65D36A2C_21?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_EasyHook_RemoteHooking.htm">RemoteHooking Class</a></div><div class="seeAlsoStyle"><a href="Overload_EasyHook_RemoteHooking_CreateAndInject.htm">CreateAndInject Overload</a></div><div class="seeAlsoStyle"><a href="N_EasyHook.htm">EasyHook Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Documentation built 2017-03-02.<p><a href="https://easyhook.github.io/" target="_blank">Copyright (C) 2009 Christoph Husse &amp; (C) 2012-2017 Justin Stenning</a></p>
<script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
  var pageTracker = _gat._getTracker("UA-66127710-1");
  pageTracker._trackPageview();
} catch(err) {}
</script> </div></body></html>