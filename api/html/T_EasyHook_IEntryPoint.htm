<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IEntryPoint Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IEntryPoint interface" /><meta name="System.Keywords" content="EasyHook.IEntryPoint interface" /><meta name="System.Keywords" content="IEntryPoint interface, about IEntryPoint interface" /><meta name="Microsoft.Help.F1" content="EasyHook.IEntryPoint" /><meta name="Microsoft.Help.Id" content="T:EasyHook.IEntryPoint" /><meta name="Description" content="EasyHook will search in the injected user library for a class which implements this interface. You should only have one class exposing this interface, otherwise it is undefined which one will be choosen." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="EasyHook" /><meta name="file" content="T_EasyHook_IEntryPoint" /><meta name="guid" content="T_EasyHook_IEntryPoint" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">EasyHook 2.7 Beta<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook 2.7 Beta" tocid="roottoc">EasyHook 2.7 Beta</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_EasyHook.htm" title="EasyHook" tocid="N_EasyHook">EasyHook</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_COMClassInfo.htm" title="COMClassInfo Class" tocid="T_EasyHook_COMClassInfo">COMClassInfo Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_Config.htm" title="Config Class" tocid="T_EasyHook_Config">Config Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_HelperServiceInterface.htm" title="HelperServiceInterface Class" tocid="T_EasyHook_HelperServiceInterface">HelperServiceInterface Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_HookAccessControl.htm" title="HookAccessControl Class" tocid="T_EasyHook_HookAccessControl">HookAccessControl Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_HookRuntimeInfo.htm" title="HookRuntimeInfo Class" tocid="T_EasyHook_HookRuntimeInfo">HookRuntimeInfo Class</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="T_EasyHook_IEntryPoint.htm" title="IEntryPoint Interface" tocid="T_EasyHook_IEntryPoint">IEntryPoint Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_InjectionLoader.htm" title="InjectionLoader Class" tocid="T_EasyHook_InjectionLoader">InjectionLoader Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="T_EasyHook_InjectionOptions.htm" title="InjectionOptions Enumeration" tocid="T_EasyHook_InjectionOptions">InjectionOptions Enumeration</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_LocalHook.htm" title="LocalHook Class" tocid="T_EasyHook_LocalHook">LocalHook Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_NativeAPI.htm" title="NativeAPI Class" tocid="T_EasyHook_NativeAPI">NativeAPI Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_RemoteHooking.htm" title="RemoteHooking Class" tocid="T_EasyHook_RemoteHooking">RemoteHooking Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_EasyHook_RemoteHooking_IContext.htm" title="RemoteHooking.IContext Interface" tocid="T_EasyHook_RemoteHooking_IContext">RemoteHooking.IContext Interface</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn">IEntryPoint Interface</td></tr></table><span class="introStyle"></span><script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script><!-- EasyHookLeaderBoard728x90 --><ins class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-7073730100723702" data-ad-slot="9421789924"></ins><script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script><div class="summary">
            EasyHook will search in the injected user library for a class which implements
            this interface. You should only have one class exposing this interface, otherwise
            it is undefined which one will be choosen. 
            </div><p> </p><strong>Namespace:</strong> <a href="N_EasyHook.htm">EasyHook</a><br /><strong>Assembly:</strong> EasyHook (in EasyHook.dll) Version: 2.7.5726.0 (2.7.5726.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EDCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cs','1','4');return false;">C#</a></div><div id="ID0EDCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','vb','2','4');return false;">VB</a></div><div id="ID0EDCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','cpp','3','4');return false;">C++</a></div><div id="ID0EDCA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EDCA','fs','4','4');return false;">F#</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EDCA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EDCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EDCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">IEntryPoint</span></pre></div><div id="ID0EDCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Interface</span> <span class="identifier">IEntryPoint</span></pre></div><div id="ID0EDCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface class</span> <span class="identifier">IEntryPoint</span></pre></div><div id="ID0EDCA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">type</span> <span class="identifier">IEntryPoint</span> =  <span class="keyword">interface</span> <span class="keyword">end</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EDCA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            To implement this interface is not the only thing to do. The related class shall export
            two methods. The first one is <span class="code">Initialize(IContext, ...)</span> which will let you initialize
            your library. You should immediately complete this call and only connect to your host
            application for further error reporting. This initialization method allows you to redirect
            all unhandled exceptions to your host application automatically. So even if all things in
            your library initialization would fail, you may still report exceptions! Such
            unhandled exceptions will be thrown by <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST6E8C0DEE_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_0?cpp=array&lt;");</script>Object<span id="LST6E8C0DEE_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_1?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> in your host. But
            make sure that you are using serializable exception objects only as all standard NET ones are,
            but not all custom ones. Otherwise you will only intercept a general exception with no specific
            information attached.
            </p><p>
            The second one is <span class="code">Run(IContext, ...)</span> and should return if you want to unload your injected library. 
            Unhandled exceptions WON'T be redirected automatically. As you are expected to connect to
            your host in <span class="code">Initialize()</span>, you are now also expected to report errors by yourself.
            </p><p>
            The parameter list described by <span class="code">(IContext, ...)</span> will always contain a <a href="T_EasyHook_RemoteHooking_IContext.htm">RemoteHooking<span id="LST6E8C0DEE_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IContext</a>
            instance as first parameter. All further parameters will depend on the arguments passed to <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST6E8C0DEE_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_3?cpp=array&lt;");</script>Object<span id="LST6E8C0DEE_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_4?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>
            at your injection host. <span class="code">Initialize()</span> and <span class="code">Run()</span> must have the same custom parameter list
            as composed by the one passed to <span class="code">Inject()</span>. Otherwise an exception will be thrown. For example
            if you call <a href="M_EasyHook_RemoteHooking_Inject.htm">Inject(Int32, InjectionOptions, String, String, <span id="LST6E8C0DEE_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_5?cpp=array&lt;");</script>Object<span id="LST6E8C0DEE_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6E8C0DEE_6?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> with <span class="code">Inject(..., ..., ..., ..., "MyString1", "MyString2")</span>, you
            have supplied a custom argument list of the format <span class="code">String, String</span> to <span class="code">Inject</span>. This list
            will be converted to an object array and serialized. The injected library stub will later
            deserialize this array and pass it to <span class="code">Initialize()</span> and <span class="code">Run()</span>, both expected to have
            a parameter of <span class="code">IContext, String, String</span> in our case. So <span class="code">Run</span> will now be called with
            <span class="code">(IContext, "MyString1", "MyString2")</span>. I hope this is comprehensively explained ;-).
            </p><p>
            You shouldn't use static fields or properties within such a class, as this might lead to
            bugs in your code when multiple library instances are running in the same target!
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_EasyHook.htm">EasyHook Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Documentation built 2015-09-05.<p><a href="https://easyhook.github.io/" target="_blank">Copyright (C) 2009 Christoph Husse &amp; (C) 2012-2015 Justin Stenning</a></p><script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script><script type="text/javascript">
try {
  var pageTracker = _gat._getTracker("UA-66127710-1");
  pageTracker._trackPageview();
} catch(err) {}
</script> </div></body></html>